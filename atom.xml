<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://b.cjh.zone</id>
    <title>不想长大的石头</title>
    <updated>2019-11-20T03:15:02.805Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://b.cjh.zone"/>
    <link rel="self" href="https://b.cjh.zone/atom.xml"/>
    <logo>https://b.cjh.zone/images/avatar.png</logo>
    <icon>https://b.cjh.zone/favicon.ico</icon>
    <rights>All rights reserved 2019, 不想长大的石头</rights>
    <entry>
        <title type="html"><![CDATA[科学上网-Linux(Ubuntu 16.04)配置shadowsocks客户端]]></title>
        <id>https://b.cjh.zone/post/ubuntu_ss_config</id>
        <link href="https://b.cjh.zone/post/ubuntu_ss_config">
        </link>
        <updated>2018-11-24T19:16:29.000Z</updated>
        <content type="html"><![CDATA[<p>Linux下的Shadowsocks的客户端（下文简称为ss）有两种版本，一种是GUI的，这种有图形界面，比较适合新手使用，另一种是命令行形式的。接下来详细介绍下这两种形式的安装方法：</p>
<h2 id="配置shadowsocks命令行程序">配置Shadowsocks命令行程序</h2>
<p>命令行版本我分了4个步骤，稍微有点繁琐，其实还好啦～</p>
<h3 id="安装ss">安装ss</h3>
<p>打开终端，如果你没有安装pip那么先输入下面这个命令安装<code>pip</code></p>
<pre><code class="language-shell">$ sudo apt-get update
$ sudo apt-get install python-pip
</code></pre>
<p>输入以下命令安装ss</p>
<pre><code class="language-shell">$ sudo pip install shadowsocks
</code></pre>
<img src="http://img.cjh.zone/shadowsocksInstall.png" alt="shadowsocksInstall" width=450>
<p>安装完成之后，你可以在终端中输入<code>sslocal -help</code>来看看帮助文档</p>
<h3 id="运行ss">运行ss</h3>
<p>安装完成后，就可以按照下面的方式启动啦～</p>
<p>我这里写了两种启动方式，第一种需要自己写一个ss的<code>.json</code>配置文件，第二种直接在命令中写你所连接的vps的信息，个人推荐第一种。</p>
<h4 id="配置文件运行">配置文件运行</h4>
<p>首先，在你的本地新建一个文本文档，文档路径随意，推荐放在你的家目录，例如<code>/home/你的用户名/ss_config</code>，文档里面填上如下配置信息，然后保存时把后缀改为<code>.json</code></p>
<pre><code class="language-json">{
	&quot;server&quot;:&quot;207.148.***.***&quot;,
	&quot;server_port&quot;:666,
	&quot;local_address&quot;:&quot;127.0.0.1&quot;,
	&quot;local_port&quot;:1080,
	&quot;password&quot;:&quot;keyword&quot;,
	&quot;timeout&quot;:300,
	&quot;method&quot;:&quot;加密方式&quot;
}
</code></pre>
<p>其中<code>server</code>为你的vps服务器地址，<code>server_port</code>为端口号，<code>password</code>为连接密码，<code>method</code>为加密方式，其他的选项一般可以不用修改，接下来就可以去终端运行了，输入以下命令</p>
<pre><code class="language-shell">$ sslocal -c /home/jhchen/ss_config/ss.json
</code></pre>
<p>其中<code>/home/jhchen/ss_config/ss.json</code>是我的配置文件的保存路径，看到类似如下效果就表示连接成功了</p>
<img src="http://img.cjh.zone/ssRun.png" alt="ssRun" width=450>
<blockquote>
<p>如果你跟我一样使用的是<code>chacha20</code>的加密方式，那么你也可能会报这样的错误：<strong>缺少libsodium</strong>，解决方法参考<a href="https://blog.csdn.net/lengconglin/article/details/77655845">这篇文章</a>吧</p>
<img src="http://img.cjh.zone/libsodium.png" alt="libsodium" width=450>
</blockquote>
<h4 id="直接输入命令运行">直接输入命令运行</h4>
<p>第二种方式直接打开终端，输入以下命令运行</p>
<pre><code class="language-shell">$ sslocal -s 207.148.1.1 -p 666 -k “your_passwd” -b 127.0.0.1 -l 1080
</code></pre>
<p>其中<code>207.148.1.1</code>为你vps的IP地址，<code>666</code>为端口号，<code>your_passwd</code>为连接密码（别忘记加双引号），后面的一般不用改了</p>
<h3 id="设置开机自启动">设置开机自启动</h3>
<p>每次开机都要输入一遍命令太麻烦了吧～所以设置ss开机自启还是很有必要的</p>
<p>首先，打开图形化开机启动项管理界面</p>
<pre><code class="language-shell">$ gnome-session-properties
</code></pre>
<p>然后点击<code>添加（Add）</code>，在弹出的框框里，<code>名称</code>随便填，<code>注释</code>随便填，<code>命令</code>填上面启动ss时你在终端输入的命令，比如我的是<code>sslocal -c /home/jhchen/ss_config/ss.json</code></p>
<img src="http://img.cjh.zone/addStart.png" alt="addStart" width=300>
<h3 id="span-idproxy配置代理span"><span id="proxy">配置代理</span></h3>
<p>ss正常运行之后，你会发现还是上不了网，原因是还需要作代理配置<br>
这里有两种代理模式，分别是<code>全局模式</code>和<code>PAC模式</code>，用过ss的人都知道这是啥意思，我就不解释了</p>
<h4 id="全局模式">全局模式</h4>
<p>打开<code>系统设置</code>-&gt;<code>网络</code>-&gt;<code>网络代理</code>，在<code>方法</code>这一栏选择<code>手动</code>，然后作如下配置，再点击<code>应用到整个系统</code>，完工！但是这样你所有的流量都走的是vps，我不太喜欢这种模式，因为有些国内的网站本来可以很快访问的，由于经过vps中转了一次，就会变得有些慢，其次是还会耗费你vps的流量啊～</p>
<img src="http://img.cjh.zone/all.png" alt="all" width=450>
<h4 id="pac模式">PAC模式</h4>
<p>要想使用PAC模式，必须要有PAC文件，一共两种途径获得，一种是网络，一种是本地。</p>
<p>我这里用的是本地，所以只介绍本地PAC的方法，网络PAC大家自行搜索吧～</p>
<p>首先，我们需要安装<code>genpac</code></p>
<pre><code class="language-shell">$ sudo apt-get update 
$ sudo pip install genpac 
</code></pre>
<p>然后，利用<code>genpac</code>生成pac文件，<strong>输入前确保ss处于打开状态</strong>（点击<a href="https://github.com/JinnLynn/genpac">这里</a>可以查看<code>genpac</code>更多命令）</p>
<pre><code class="language-shell">genpac -p &quot;SOCKS5 127.0.0.1:1080&quot; --output=&quot;autoproxy.pac&quot;
</code></pre>
<p>执行完上面的命令之后会在你的当前目录产生一个名字为<code>autoproxy.pac</code>的文件，我把它跟前面的配置文件<code>ss.json</code>放在了一起（<code>/home/jhchen/ss_config/autoproxy.pac</code>）</p>
<p>最后，打开<code>系统设置</code>-&gt;<code>网络</code>-&gt;<code>网络代理</code>，在<code>方法</code>这一栏选择<code>自动</code>，把<code>URL</code>改为你的PAC文件所在的目录，点击<code>应用到整个系统</code>，就像下面这张图一样</p>
<img src="http://img.cjh.zone/select.png" alt="select" width=450>
<h2 id="配置shadowsocks-qt5图形界面版">配置Shadowsocks-qt5（图形界面版）</h2>
<p>打开terminal，输入以下命令安装Shadowsocks-qt5</p>
<pre><code class="language-shell">$ sudo add-apt-repository ppa:hzwhuang/ss-qt5
$ sudo apt-get update
$ sudo apt-get install shadowsocks-qt5
</code></pre>
<p>安装好之后，按下<code>super</code>按键（也就是Windows键啦～！），输入<code>shadowsocks</code>就能看到软件图标了，点击启动它，为了方便你可以把它固定到<code>启动器</code>，这样以后不用每次启动都要去搜索一遍</p>
<img src="http://img.cjh.zone/shadowsocks-qt5-search.png" alt="shadowsocks-qt5-search" width=450>
<p>打开之后，在空白处右击鼠标，选择<code>添加</code>-&gt;<code>手动</code>，然后在弹出的框框里天上你的vps信息</p>
<p>!<img src="http://img.cjh.zone/ss-qt5-setting.png" alt="ss-qt5-setting" width=300></p>
<p>配置后就可以连接了</p>
<img src="http://img.cjh.zone/shadowsocks-qt5.png" alt="shadowsocks-qt5" width=450>
<p>到现在，shadowsocks-qt5的配置完成了，接下来还是要设置代理，具体步骤跟上面的命令行程序配置代理一毛一样，点**<a href="#proxy">这里</a>**回去看看～</p>
<p>这里有shadowsocks-qt5的中文安装指南和使用手册，有需要的话可以看看：https://github.com/shadowsocks/shadowsocks-qt5/wiki</p>
<blockquote>
<p>参考文章：</p>
<p>https://blog.csdn.net/noiary/article/details/49215373</p>
<p>https://www.cnblogs.com/Dumblidor/p/5450248.html</p>
<p>http://www.bubuko.com/infodetail-1535272.html</p>
<p>https://blog.csdn.net/JohinieLi/article/details/79594954</p>
</blockquote>
]]></content>
    </entry>
</feed>